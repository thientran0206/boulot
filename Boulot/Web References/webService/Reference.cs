//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Boulot.webService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="h21WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class h21WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback inscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Valide_answerOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAdresseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllEmployesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllEmployesSerchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCOREOperationCompleted;
        
        private System.Threading.SendOrPostCallback reviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechercheOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadGalerieOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadPictOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_galerieOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisponibiliteOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllVillesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public h21WebService1() {
            this.Url = "http://siiraaj1-001-site1.itempurl.com/h21WebService1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event inscriptionCompletedEventHandler inscriptionCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event getQuestionCompletedEventHandler getQuestionCompleted;
        
        /// <remarks/>
        public event Valide_answerCompletedEventHandler Valide_answerCompleted;
        
        /// <remarks/>
        public event setPasswordCompletedEventHandler setPasswordCompleted;
        
        /// <remarks/>
        public event getAllServicesCompletedEventHandler getAllServicesCompleted;
        
        /// <remarks/>
        public event getAllAdresseCompletedEventHandler getAllAdresseCompleted;
        
        /// <remarks/>
        public event getAllEmployesCompletedEventHandler getAllEmployesCompleted;
        
        /// <remarks/>
        public event getAllEmployesSerchCompletedEventHandler getAllEmployesSerchCompleted;
        
        /// <remarks/>
        public event SCORECompletedEventHandler SCORECompleted;
        
        /// <remarks/>
        public event reviewCompletedEventHandler reviewCompleted;
        
        /// <remarks/>
        public event rechercheCompletedEventHandler rechercheCompleted;
        
        /// <remarks/>
        public event uploadGalerieCompletedEventHandler uploadGalerieCompleted;
        
        /// <remarks/>
        public event uploadPictCompletedEventHandler uploadPictCompleted;
        
        /// <remarks/>
        public event get_galerieCompletedEventHandler get_galerieCompleted;
        
        /// <remarks/>
        public event updateProfileCompletedEventHandler updateProfileCompleted;
        
        /// <remarks/>
        public event setDisponibiliteCompletedEventHandler setDisponibiliteCompleted;
        
        /// <remarks/>
        public event uploadImageCompletedEventHandler uploadImageCompleted;
        
        /// <remarks/>
        public event getAllVillesCompletedEventHandler getAllVillesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/inscription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string inscription(int id_ville, string nom, string prenom, int service, string tel, string pseudo, string password, string Comfirmpassword, string question, string indice, string adresse) {
            object[] results = this.Invoke("inscription", new object[] {
                        id_ville,
                        nom,
                        prenom,
                        service,
                        tel,
                        pseudo,
                        password,
                        Comfirmpassword,
                        question,
                        indice,
                        adresse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void inscriptionAsync(int id_ville, string nom, string prenom, int service, string tel, string pseudo, string password, string Comfirmpassword, string question, string indice, string adresse) {
            this.inscriptionAsync(id_ville, nom, prenom, service, tel, pseudo, password, Comfirmpassword, question, indice, adresse, null);
        }
        
        /// <remarks/>
        public void inscriptionAsync(int id_ville, string nom, string prenom, int service, string tel, string pseudo, string password, string Comfirmpassword, string question, string indice, string adresse, object userState) {
            if ((this.inscriptionOperationCompleted == null)) {
                this.inscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OninscriptionOperationCompleted);
            }
            this.InvokeAsync("inscription", new object[] {
                        id_ville,
                        nom,
                        prenom,
                        service,
                        tel,
                        pseudo,
                        password,
                        Comfirmpassword,
                        question,
                        indice,
                        adresse}, this.inscriptionOperationCompleted, userState);
        }
        
        private void OninscriptionOperationCompleted(object arg) {
            if ((this.inscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inscriptionCompleted(this, new inscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable login(string pseudo, string pwd) {
            object[] results = this.Invoke("login", new object[] {
                        pseudo,
                        pwd});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string pseudo, string pwd) {
            this.loginAsync(pseudo, pwd, null);
        }
        
        /// <remarks/>
        public void loginAsync(string pseudo, string pwd, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        pseudo,
                        pwd}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getQuestion(string tel) {
            object[] results = this.Invoke("getQuestion", new object[] {
                        tel});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getQuestionAsync(string tel) {
            this.getQuestionAsync(tel, null);
        }
        
        /// <remarks/>
        public void getQuestionAsync(string tel, object userState) {
            if ((this.getQuestionOperationCompleted == null)) {
                this.getQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuestionOperationCompleted);
            }
            this.InvokeAsync("getQuestion", new object[] {
                        tel}, this.getQuestionOperationCompleted, userState);
        }
        
        private void OngetQuestionOperationCompleted(object arg) {
            if ((this.getQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuestionCompleted(this, new getQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Valide_answer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Valide_answer(string tel, string question, string answer) {
            object[] results = this.Invoke("Valide_answer", new object[] {
                        tel,
                        question,
                        answer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Valide_answerAsync(string tel, string question, string answer) {
            this.Valide_answerAsync(tel, question, answer, null);
        }
        
        /// <remarks/>
        public void Valide_answerAsync(string tel, string question, string answer, object userState) {
            if ((this.Valide_answerOperationCompleted == null)) {
                this.Valide_answerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValide_answerOperationCompleted);
            }
            this.InvokeAsync("Valide_answer", new object[] {
                        tel,
                        question,
                        answer}, this.Valide_answerOperationCompleted, userState);
        }
        
        private void OnValide_answerOperationCompleted(object arg) {
            if ((this.Valide_answerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Valide_answerCompleted(this, new Valide_answerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setPassword(string tel, string password, string Comfirmpassword) {
            object[] results = this.Invoke("setPassword", new object[] {
                        tel,
                        password,
                        Comfirmpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setPasswordAsync(string tel, string password, string Comfirmpassword) {
            this.setPasswordAsync(tel, password, Comfirmpassword, null);
        }
        
        /// <remarks/>
        public void setPasswordAsync(string tel, string password, string Comfirmpassword, object userState) {
            if ((this.setPasswordOperationCompleted == null)) {
                this.setPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPasswordOperationCompleted);
            }
            this.InvokeAsync("setPassword", new object[] {
                        tel,
                        password,
                        Comfirmpassword}, this.setPasswordOperationCompleted, userState);
        }
        
        private void OnsetPasswordOperationCompleted(object arg) {
            if ((this.setPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPasswordCompleted(this, new setPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllServices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllServices() {
            object[] results = this.Invoke("getAllServices", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllServicesAsync() {
            this.getAllServicesAsync(null);
        }
        
        /// <remarks/>
        public void getAllServicesAsync(object userState) {
            if ((this.getAllServicesOperationCompleted == null)) {
                this.getAllServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllServicesOperationCompleted);
            }
            this.InvokeAsync("getAllServices", new object[0], this.getAllServicesOperationCompleted, userState);
        }
        
        private void OngetAllServicesOperationCompleted(object arg) {
            if ((this.getAllServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllServicesCompleted(this, new getAllServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllAdresse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllAdresse() {
            object[] results = this.Invoke("getAllAdresse", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAdresseAsync() {
            this.getAllAdresseAsync(null);
        }
        
        /// <remarks/>
        public void getAllAdresseAsync(object userState) {
            if ((this.getAllAdresseOperationCompleted == null)) {
                this.getAllAdresseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAdresseOperationCompleted);
            }
            this.InvokeAsync("getAllAdresse", new object[0], this.getAllAdresseOperationCompleted, userState);
        }
        
        private void OngetAllAdresseOperationCompleted(object arg) {
            if ((this.getAllAdresseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAdresseCompleted(this, new getAllAdresseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllEmployes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllEmployes(int id_services) {
            object[] results = this.Invoke("getAllEmployes", new object[] {
                        id_services});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllEmployesAsync(int id_services) {
            this.getAllEmployesAsync(id_services, null);
        }
        
        /// <remarks/>
        public void getAllEmployesAsync(int id_services, object userState) {
            if ((this.getAllEmployesOperationCompleted == null)) {
                this.getAllEmployesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllEmployesOperationCompleted);
            }
            this.InvokeAsync("getAllEmployes", new object[] {
                        id_services}, this.getAllEmployesOperationCompleted, userState);
        }
        
        private void OngetAllEmployesOperationCompleted(object arg) {
            if ((this.getAllEmployesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllEmployesCompleted(this, new getAllEmployesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllEmployesSerch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllEmployesSerch(string nom, int id_services) {
            object[] results = this.Invoke("getAllEmployesSerch", new object[] {
                        nom,
                        id_services});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllEmployesSerchAsync(string nom, int id_services) {
            this.getAllEmployesSerchAsync(nom, id_services, null);
        }
        
        /// <remarks/>
        public void getAllEmployesSerchAsync(string nom, int id_services, object userState) {
            if ((this.getAllEmployesSerchOperationCompleted == null)) {
                this.getAllEmployesSerchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllEmployesSerchOperationCompleted);
            }
            this.InvokeAsync("getAllEmployesSerch", new object[] {
                        nom,
                        id_services}, this.getAllEmployesSerchOperationCompleted, userState);
        }
        
        private void OngetAllEmployesSerchOperationCompleted(object arg) {
            if ((this.getAllEmployesSerchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllEmployesSerchCompleted(this, new getAllEmployesSerchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SCORE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public float SCORE(int id_emp) {
            object[] results = this.Invoke("SCORE", new object[] {
                        id_emp});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void SCOREAsync(int id_emp) {
            this.SCOREAsync(id_emp, null);
        }
        
        /// <remarks/>
        public void SCOREAsync(int id_emp, object userState) {
            if ((this.SCOREOperationCompleted == null)) {
                this.SCOREOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCOREOperationCompleted);
            }
            this.InvokeAsync("SCORE", new object[] {
                        id_emp}, this.SCOREOperationCompleted, userState);
        }
        
        private void OnSCOREOperationCompleted(object arg) {
            if ((this.SCORECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCORECompleted(this, new SCORECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/review", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string review(int id_emp, string mail, float score) {
            object[] results = this.Invoke("review", new object[] {
                        id_emp,
                        mail,
                        score});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reviewAsync(int id_emp, string mail, float score) {
            this.reviewAsync(id_emp, mail, score, null);
        }
        
        /// <remarks/>
        public void reviewAsync(int id_emp, string mail, float score, object userState) {
            if ((this.reviewOperationCompleted == null)) {
                this.reviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreviewOperationCompleted);
            }
            this.InvokeAsync("review", new object[] {
                        id_emp,
                        mail,
                        score}, this.reviewOperationCompleted, userState);
        }
        
        private void OnreviewOperationCompleted(object arg) {
            if ((this.reviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reviewCompleted(this, new reviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/recherche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable recherche(int id_ville, int id_service) {
            object[] results = this.Invoke("recherche", new object[] {
                        id_ville,
                        id_service});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void rechercheAsync(int id_ville, int id_service) {
            this.rechercheAsync(id_ville, id_service, null);
        }
        
        /// <remarks/>
        public void rechercheAsync(int id_ville, int id_service, object userState) {
            if ((this.rechercheOperationCompleted == null)) {
                this.rechercheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechercheOperationCompleted);
            }
            this.InvokeAsync("recherche", new object[] {
                        id_ville,
                        id_service}, this.rechercheOperationCompleted, userState);
        }
        
        private void OnrechercheOperationCompleted(object arg) {
            if ((this.rechercheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechercheCompleted(this, new rechercheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/uploadGalerie", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string uploadGalerie(string[] galerieUrl, int id_emp, int service) {
            object[] results = this.Invoke("uploadGalerie", new object[] {
                        galerieUrl,
                        id_emp,
                        service});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadGalerieAsync(string[] galerieUrl, int id_emp, int service) {
            this.uploadGalerieAsync(galerieUrl, id_emp, service, null);
        }
        
        /// <remarks/>
        public void uploadGalerieAsync(string[] galerieUrl, int id_emp, int service, object userState) {
            if ((this.uploadGalerieOperationCompleted == null)) {
                this.uploadGalerieOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadGalerieOperationCompleted);
            }
            this.InvokeAsync("uploadGalerie", new object[] {
                        galerieUrl,
                        id_emp,
                        service}, this.uploadGalerieOperationCompleted, userState);
        }
        
        private void OnuploadGalerieOperationCompleted(object arg) {
            if ((this.uploadGalerieCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadGalerieCompleted(this, new uploadGalerieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/uploadImageGalerie", RequestElementName="uploadImageGalerie", RequestNamespace="http://tempuri.org/", ResponseElementName="uploadImageGalerieResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadPict(string source, int emp_id, int service_id) {
            this.Invoke("uploadPict", new object[] {
                        source,
                        emp_id,
                        service_id});
        }
        
        /// <remarks/>
        public void uploadPictAsync(string source, int emp_id, int service_id) {
            this.uploadPictAsync(source, emp_id, service_id, null);
        }
        
        /// <remarks/>
        public void uploadPictAsync(string source, int emp_id, int service_id, object userState) {
            if ((this.uploadPictOperationCompleted == null)) {
                this.uploadPictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadPictOperationCompleted);
            }
            this.InvokeAsync("uploadPict", new object[] {
                        source,
                        emp_id,
                        service_id}, this.uploadPictOperationCompleted, userState);
        }
        
        private void OnuploadPictOperationCompleted(object arg) {
            if ((this.uploadPictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadPictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_galerie", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable get_galerie(int id_employe, int id_service) {
            object[] results = this.Invoke("get_galerie", new object[] {
                        id_employe,
                        id_service});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void get_galerieAsync(int id_employe, int id_service) {
            this.get_galerieAsync(id_employe, id_service, null);
        }
        
        /// <remarks/>
        public void get_galerieAsync(int id_employe, int id_service, object userState) {
            if ((this.get_galerieOperationCompleted == null)) {
                this.get_galerieOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_galerieOperationCompleted);
            }
            this.InvokeAsync("get_galerie", new object[] {
                        id_employe,
                        id_service}, this.get_galerieOperationCompleted, userState);
        }
        
        private void Onget_galerieOperationCompleted(object arg) {
            if ((this.get_galerieCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_galerieCompleted(this, new get_galerieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string updateProfile(int id_emp, int id_ville, string nom, string pseudo, string prenom, int service, string tel, string password) {
            object[] results = this.Invoke("updateProfile", new object[] {
                        id_emp,
                        id_ville,
                        nom,
                        pseudo,
                        prenom,
                        service,
                        tel,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateProfileAsync(int id_emp, int id_ville, string nom, string pseudo, string prenom, int service, string tel, string password) {
            this.updateProfileAsync(id_emp, id_ville, nom, pseudo, prenom, service, tel, password, null);
        }
        
        /// <remarks/>
        public void updateProfileAsync(int id_emp, int id_ville, string nom, string pseudo, string prenom, int service, string tel, string password, object userState) {
            if ((this.updateProfileOperationCompleted == null)) {
                this.updateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProfileOperationCompleted);
            }
            this.InvokeAsync("updateProfile", new object[] {
                        id_emp,
                        id_ville,
                        nom,
                        pseudo,
                        prenom,
                        service,
                        tel,
                        password}, this.updateProfileOperationCompleted, userState);
        }
        
        private void OnupdateProfileOperationCompleted(object arg) {
            if ((this.updateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProfileCompleted(this, new updateProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setDisponibilite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setDisponibilite(int id, bool disp) {
            object[] results = this.Invoke("setDisponibilite", new object[] {
                        id,
                        disp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setDisponibiliteAsync(int id, bool disp) {
            this.setDisponibiliteAsync(id, disp, null);
        }
        
        /// <remarks/>
        public void setDisponibiliteAsync(int id, bool disp, object userState) {
            if ((this.setDisponibiliteOperationCompleted == null)) {
                this.setDisponibiliteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisponibiliteOperationCompleted);
            }
            this.InvokeAsync("setDisponibilite", new object[] {
                        id,
                        disp}, this.setDisponibiliteOperationCompleted, userState);
        }
        
        private void OnsetDisponibiliteOperationCompleted(object arg) {
            if ((this.setDisponibiliteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisponibiliteCompleted(this, new setDisponibiliteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/uploadImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadImage(string source, int emp_id) {
            this.Invoke("uploadImage", new object[] {
                        source,
                        emp_id});
        }
        
        /// <remarks/>
        public void uploadImageAsync(string source, int emp_id) {
            this.uploadImageAsync(source, emp_id, null);
        }
        
        /// <remarks/>
        public void uploadImageAsync(string source, int emp_id, object userState) {
            if ((this.uploadImageOperationCompleted == null)) {
                this.uploadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadImageOperationCompleted);
            }
            this.InvokeAsync("uploadImage", new object[] {
                        source,
                        emp_id}, this.uploadImageOperationCompleted, userState);
        }
        
        private void OnuploadImageOperationCompleted(object arg) {
            if ((this.uploadImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllVilles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllVilles() {
            object[] results = this.Invoke("getAllVilles", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllVillesAsync() {
            this.getAllVillesAsync(null);
        }
        
        /// <remarks/>
        public void getAllVillesAsync(object userState) {
            if ((this.getAllVillesOperationCompleted == null)) {
                this.getAllVillesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllVillesOperationCompleted);
            }
            this.InvokeAsync("getAllVilles", new object[0], this.getAllVillesOperationCompleted, userState);
        }
        
        private void OngetAllVillesOperationCompleted(object arg) {
            if ((this.getAllVillesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllVillesCompleted(this, new getAllVillesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void inscriptionCompletedEventHandler(object sender, inscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class inscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal inscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getQuestionCompletedEventHandler(object sender, getQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void Valide_answerCompletedEventHandler(object sender, Valide_answerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Valide_answerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Valide_answerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void setPasswordCompletedEventHandler(object sender, setPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getAllServicesCompletedEventHandler(object sender, getAllServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getAllAdresseCompletedEventHandler(object sender, getAllAdresseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAdresseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAdresseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getAllEmployesCompletedEventHandler(object sender, getAllEmployesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllEmployesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllEmployesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getAllEmployesSerchCompletedEventHandler(object sender, getAllEmployesSerchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllEmployesSerchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllEmployesSerchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCORECompletedEventHandler(object sender, SCORECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCORECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCORECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void reviewCompletedEventHandler(object sender, reviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void rechercheCompletedEventHandler(object sender, rechercheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechercheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechercheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void uploadGalerieCompletedEventHandler(object sender, uploadGalerieCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadGalerieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadGalerieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void uploadPictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void get_galerieCompletedEventHandler(object sender, get_galerieCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_galerieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_galerieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void updateProfileCompletedEventHandler(object sender, updateProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void setDisponibiliteCompletedEventHandler(object sender, setDisponibiliteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDisponibiliteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDisponibiliteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void uploadImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getAllVillesCompletedEventHandler(object sender, getAllVillesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllVillesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllVillesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591